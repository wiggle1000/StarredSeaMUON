// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StarredSeaMUON.Database;

#nullable disable

namespace StarredSeaMUON.Migrations
{
    [DbContext(typeof(DbContextStarredSea))]
    partial class DbContextStarredSeaModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("StarredSeaMUON.Database.Objects.DbAccount", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharacterIndex")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PassHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserID");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("StarredSeaMUON.Database.Objects.DbItemInstance", b =>
                {
                    b.Property<int>("InstanceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DescriptionOverride")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsInRoom")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ItemTypeID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Metadata")
                        .HasColumnType("TEXT");

                    b.HasKey("InstanceID");

                    b.ToTable("ItemInstances");
                });

            modelBuilder.Entity("StarredSeaMUON.Database.Objects.DbItemType", b =>
                {
                    b.Property<int>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("Condition")
                        .HasColumnType("REAL");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LookText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Metadata")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Volume")
                        .HasColumnType("REAL");

                    b.Property<float>("Weight")
                        .HasColumnType("REAL");

                    b.HasKey("ItemID");

                    b.ToTable("ItemTypes");
                });

            modelBuilder.Entity("StarredSeaMUON.Database.Objects.DbMobInstance", b =>
                {
                    b.Property<int>("InstanceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DescriptionOverride")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsInRoom")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Metadata")
                        .HasColumnType("TEXT");

                    b.Property<long>("MobTypeID")
                        .HasColumnType("INTEGER");

                    b.HasKey("InstanceID");

                    b.ToTable("MobInstances");
                });

            modelBuilder.Entity("StarredSeaMUON.Database.Objects.DbMobType", b =>
                {
                    b.Property<int>("MobID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BaseHealth")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Metadata")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("MobID");

                    b.ToTable("MobTypes");
                });

            modelBuilder.Entity("StarredSeaMUON.Database.Objects.DbPlayerCharacter", b =>
                {
                    b.Property<int>("CharacterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CharName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ControllingMobInstanceID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("DbAccountUserID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Permissions")
                        .HasColumnType("TEXT");

                    b.HasKey("CharacterID");

                    b.HasIndex("CharName")
                        .IsUnique();

                    b.HasIndex("ControllingMobInstanceID");

                    b.HasIndex("DbAccountUserID");

                    b.ToTable("DbPlayerCharacter");
                });

            modelBuilder.Entity("StarredSeaMUON.Database.Objects.DbRoom", b =>
                {
                    b.Property<int>("RoomID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Exits")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemInstanceIDs")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Metadata")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MobInstanceIDs")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("RoomID");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("StarredSeaMUON.Database.Objects.DbPlayerCharacter", b =>
                {
                    b.HasOne("StarredSeaMUON.Database.Objects.DbMobInstance", "ControllingMob")
                        .WithMany()
                        .HasForeignKey("ControllingMobInstanceID");

                    b.HasOne("StarredSeaMUON.Database.Objects.DbAccount", null)
                        .WithMany("Characters")
                        .HasForeignKey("DbAccountUserID");

                    b.Navigation("ControllingMob");
                });

            modelBuilder.Entity("StarredSeaMUON.Database.Objects.DbAccount", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
